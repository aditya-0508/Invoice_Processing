services:
  # React Client Service
  client:
    build:
      context: ./client
      dockerfile: client.Dockerfile
    container_name: react-client
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - server

  # Spring Server Service
  server:
    build:
      context: ./server
      dockerfile: server.Dockerfile
    container_name: spring-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/invoiceprocessingsystem
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=xxxx
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    networks:
      - app-network
    depends_on:
      - mysql
    links:
      - mysql

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: xxxx
      MYSQL_DATABASE: invoiceprocessingsystem
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
